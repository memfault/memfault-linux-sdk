# collectd configuration file.
#
# Memfault documentation:
#
# - https://mflt.io/linux-getting-started
# - https://mflt.io/linux-metrics
# - See an up-to-date recommended configuration:
#   https://mflt.io/linux-collectd-recommended
#
# To see a full list of options:
#
# - Read the manual:
#   https://collectd.org/documentation/manpages/collectd.conf.5.shtml
# - Read the default config file:
#   https://github.com/collectd/collectd/blob/main/src/collectd.conf.in

# Important: this line must be the first line in this file.
Interval 10

# Log to stderr. This way collectd will log to the systemd journal, which
# is captured by memfaultd (via fluent-bit):
LoadPlugin logfile
<Plugin logfile>
  LogLevel "info"
  File "stderr"
  PrintSeverity true
</Plugin>

LoadPlugin disk
<Plugin disk>
  Disk "mmcblk0"
  Disk "vda0"
</Plugin>

LoadPlugin memory

LoadPlugin uptime

LoadPlugin interface
<Plugin interface>
  Interface "lo"
  Interface "/^sit[0-9]+/"
  IgnoreSelected true
</Plugin>

LoadPlugin df
<Plugin df>
  # Set this to your persistent storage mount point.
  # Read more: https://mflt.io/linux-persistent-storage
  MountPoint "/media"
</Plugin>

LoadPlugin cpu
<Plugin cpu>
  ValuesPercentage true
</Plugin>

LoadPlugin aggregation
<Plugin aggregation>
  <Aggregation>
    Plugin "cpu"
    Type "percent"
    SetPlugin "cpu"
    SetPluginInstance "%{aggregation}"
    GroupBy "Host"
    GroupBy "TypeInstance"
    CalculateSum true
  </Aggregation>
</Plugin>

<LoadPlugin write_http>
  FlushInterval 10
</LoadPlugin>
<Plugin write_http>
  <Node "memfaultd">
    URL "http://127.0.0.1:8787/v1/collectd"
    Format "JSON"
    Metrics true
    Notifications false
    StoreRates true
    BufferSize 65536
    Timeout 10000
  </Node>
</Plugin>

LoadPlugin match_regex
LoadPlugin target_set
PostCacheChain "MemfaultFilterChain"
<Chain "MemfaultFilterChain">
  <Rule "ignore_memory_metrics">
    <Match "regex">
      Type "^memory$"
      TypeInstance "^(buffered|cached|slab_recl|slab_unrecl)$"
    </Match>
    Target "stop"
  </Rule>
  <Rule "ignore_cpu_per_instance">
    <Match "regex">
      Plugin "^cpu$"
      PluginInstance "^[0-9]+$"
    </Match>
    <Target write>
      Plugin "aggregation"
    </Target>
    Target "stop"
  </Rule>
  Target "write"
</Chain>

